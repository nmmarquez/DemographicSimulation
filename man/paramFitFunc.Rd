% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/paramFitFunc.R
\name{paramFitFunc}
\alias{paramFitFunc}
\title{Generate Parametric Mortality Smulator}
\usage{
paramFitFunc(start_params = c(0, 0, 1.1, 0.57, 80),
  location_ = "United States", year_ = 2016, sex_ = "Both",
  max_age = 140, returnParams = FALSE)
}
\arguments{
\item{start_params}{vector of length five of starting values for parameters}

\item{location_}{character, country name}

\item{year_}{1970 <= int <= 2016, year of mortality function to generate}

\item{sex_}{character, either 'Female', 'Male', or 'Both'}

\item{max_age}{float, float for the max age allowed for simulatuins generally a value >= 120}

\item{return_params}{logical, whether to return the fitted parameter values rather than the simulation function}
}
\value{
List of Demographic Mortality and Simulation Functions

Generates a parametric mortality simulator using a gamma 
distribution for under 5 mortality and a skewed normal for above five mortality
where the probability of puuling from the gamma distribution is generated from the 
observed data.
}
\description{
Generates a parametric mortality simulator using a gamma 
distribution for under 5 mortality and a skewed normal for above five mortality
where the probability of puuling from the gamma distribution is generated from the 
observed data.
}
\examples{
# Show list of countries we can simulate from 
unique(DFDeath$location)

# run plotting and simulation code
require(dplyr)
require(ggplot2)
# Generate the demographic functions for Mexico 1980
MX2016sim <- paramFitFunc(location_="Mexico", year_=1980, sex_="Both")


m <- 10000
system.time(simDeaths <- lapply(1:10, function(y) MX2016sim(m)))

MXDeath <- DFDeath \%>\%
    filter(location=="Mexico" & year==1980 & sex=="Both")

aggData <- function(sims, sim_num, m_=m){
    MXDeath \%>\% select(age_group_id, age_time, age_end) \%>\%
        mutate(ldeaths=sapply(age_end, function(a) sum(sims < a))) \%>\%
        mutate(deaths=ldeaths-lag(ldeaths)) \%>\%
        mutate(deaths=ifelse(is.na(deaths), ldeaths, deaths)) \%>\%
        mutate(pop_size=m_-lag(ldeaths)) \%>\%
        mutate(pop_size=ifelse(is.na(pop_size), m_, pop_size)) \%>\%
        mutate(px=deaths/pop_size, qx=1-px) \%>\%
        mutate(hx=1-(qx^(1/age_time))) \%>\% 
        mutate(Sx=cumprod(qx), Fx=1-Sx) \%>\%
        mutate(simulation=sim_num)
}

simDF <- bind_rows(lapply(1:10, function(i) aggData(simDeaths[[i]], i))) 

simDF \%>\% filter(age_end < 115 & hx != 0) \%>\%
    ggplot(aes(x=age_end, y=hx, color=simulation, group=simulation)) + 
    geom_line(alpha=.3) + 
    geom_line(aes(x=age_end, y=hx, group=1), data=MXDeath, color="red") + 
    coord_trans(y="log") + 
    labs(title="Parametric Simulated Instantaneous Hazard", x="Age", y="Hazard")


}
